security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_utilisateurs_provider:
            entity:
                class: App\Entity\Utilisateurs  # Indique que les utilisateurs viennent de l'entité User
                property: Email  # Utilise l'email pour retrouver les utilisateurs dans la base de données
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

            # Configuration pour les API (commentée ici, mais peut être activée si nécessaire pour les connexions API basées sur JSON ou JWT)
        api_login:
            pattern: ^/api/login  # Cette route serait spécifique aux API (connexion via API)
            stateless: true  # Indique que l'API ne maintient pas de session (stateless)
            json_login:  # Configuration pour une authentification JSON (souvent utilisée pour les APIs)
                check_path: /api/login  # La route où les données de connexion sont envoyées
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success  # Si la connexion réussit, la réponse JSON sera gérée ici
                failure_handler: lexik_jwt_authentication.handler.authentication_failure  # Si la connexion échoue, la réponse JSON sera gérée ici
        api:
                pattern: ^/api
                stateless: true
                jwt: ~

        main:
            pattern: ^/  # Cela couvre toutes les routes qui commencent par '/' (toutes les routes de l'application)
            provider: app_utilisateurs_provider # Utilise le fournisseur d'utilisateurs défini ci-dessus
            form_login:  # Authentification par formulaire
                login_path: app_login  # La route pour afficher le formulaire de connexion
                check_path: /login  # La route où les informations de connexion sont envoyées via une requête POST
                default_target_path: /utilisateurs/profile  # Après une connexion réussie, l'utilisateur est redirigé vers la page /users
            logout:  # Gestion de la déconnexion
                path: /logout  # La route pour se déconnecter

    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/login, roles: PUBLIC_ACCESS }
         - { path: ^/utilisateurs, roles: ROLE_ADMIN }
         - { path: ^/utilisateurs/new, roles: PUBLIC_ACCESS }
         - { path: ^/fiches/newPreview roles: ROLE_ADMIN }
         - { path: ^/fiches/newContenu, roles: ROLE_ADMIN }
         - { path: ^/fiches/edit, roles: ROLE_ADMIN }



